#pragma once
/* This was generated by capra_micro_comm.
* DO NOT EDIT
*/
#include <capra_comm.h>

struct Void
{
    euint8_t pad0;
};
static_assert(sizeof(Void) == 1);

struct Vector2D
{
    efloat_t x;
    efloat_t y;
};
static_assert(sizeof(Vector2D) == 8);

struct State
{
    euint8_t state;
};
static_assert(sizeof(State) == 1);

struct Status
{
    euint32_t statusCode;
};
static_assert(sizeof(Status) == 4);

Status ledOn(Void);
static_assert((sizeof(Void)+1) == 2);

Status ledOff(Void);
static_assert((sizeof(Void)+1) == 2);

Status setLedState(State);
static_assert((sizeof(State)+1) == 2);

State loopback(State);
static_assert((sizeof(State)+1) == 2);

BaseFunction_ptr commands[] = {
    new Function<Status, Void>(&ledOn),
    new Function<Status, Void>(&ledOff),
    new Function<Status, State>(&setLedState),
    new Function<State, State>(&loopback),
};
#define COMMANDS_COUNT 4
#define MAX_DECODED_SIZE 9
#define MAX_ENCODED_SIZE 13
